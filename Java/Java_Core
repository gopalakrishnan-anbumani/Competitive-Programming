
# JVM - (18-07-2018)

	JRE is a part of JDK. JVM is a part of JRE. (JDK->JRE->JVM)
	JRE -> JVM, Platform Core Classes, Supporting Libararies

	WORA
	When we Compile .java file, .class with same file name created by the Compiler.

	1. Class Loader or Class Loaded Subsystem 
	
		Class Loader is subsystem used for loading class files.
	
		Dynamic Class Loading(Class.forname()) is handled by Class Loader Subsystem.
	
	   a.Loading
	   b.Linking
	   c.Initialization
	
# From L** (10-11-2018)

	Java SE -> Core Application
	Java EE -> Libraries for build Distributed Application
	
	Java SE is actually a JDK that comprises of:
		@ Development Tools
		@ JRE
	
	Development tools include Java Complier (javac.exe) and Java Interpreter (java.exe). These Tools are required to prepare
a Java Application for execution.

	JRE comprises of Std Libraries and Other files required by JVM for executing Java application. JVM is actual runtime in 
	which a Java application executes.
	
	
		----------------------------------------- 				----------------------------------------------------
		-	Complier (javac.exe)				-				- Java Std 											-
		-	Java application launcher (java.exe)-				- 							JVM						-
		-										-				- RunTime Libs										-
		-----------------------------------------				-----------------------------------------------------
		 		# Development Tools													JRE
		 		
		 											JDK
		 											
	Java Development Tools javac and java are available in bin folder
		 					
    Complete Execution Process:   
    	Source File (.Java)										(%1%)  JVM
    															Class Loader      -> (Load All the Classes needed for execution)
    			|												Byte Code Verifire-> (Checks Code fragment for Illegal Code)
    			V										Interpreter   JIT Complier ->  (Interpreter-> Converts byte code Instruction to Machine Code )  (JIT ->  Complies reusable byte code tp machine Code)  
    		Complier (javac)
    			|
    			V
    		Byte Code (.class)   ->(%1%)
	(Platform Independent Code Generated by javac)
	
	
	
	
	
	
	
	
	
	
	
	
	
References :
	
https://www.geeksforgeeks.org/jvm-works-jvm-architecture/
https://www.guru99.com/java-virtual-machine-jvm.html
https://www.baeldung.com/java-classloaders
https://www.journaldev.com/349/java-classloader

	